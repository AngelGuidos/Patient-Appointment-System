name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run ESLint
      run: npm run lint || npm run lint:fix

    - name: Run tests
      run: npm test

    - name: Build project
      run: npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build
        path: dist/
        
    - name: Generate test report
      if: always()
      run: |
        echo "## Pipeline Test Results" > test-report.md
        echo "### Test Summary" >> test-report.md
        echo "- Date: $(date)" >> test-report.md
        echo "- Branch: ${{ github.ref }}" >> test-report.md
        echo "- Commit: ${{ github.sha }}" >> test-report.md
        if [ -d "coverage" ]; then
          echo "### Coverage Report" >> test-report.md
          echo "\`\`\`" >> test-report.md
          cat coverage/lcov-report/index.html | grep -A 5 "fraction" >> test-report.md
          echo "\`\`\`" >> test-report.md
        fi

    - name: Upload test report
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-report
        path: test-report.md

    - name: Send email notification
      if: always()
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 465
        username: ${{ secrets.EMAIL_USERNAME }}
        password: ${{ secrets.EMAIL_PASSWORD }}
        subject: "CI Pipeline Status: ${{ job.status }} - ${{ github.repository }}"
        body: |
          CI Pipeline Status: ${{ job.status }}
          Repository: ${{ github.repository }}
          Branch: ${{ github.ref }}
          Commit: ${{ github.sha }}
          
          Workflow run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          
          Changes made by: ${{ github.actor }}
          
          Status of steps:
          - Install dependencies: ${{ steps.install.outcome }}
          - ESLint: ${{ steps.lint.outcome }}
          - Tests: ${{ steps.test.outcome }}
          - Build: ${{ steps.build.outcome }}
          
          For more details, please check the workflow run link above.
        to: ${{ secrets.NOTIFICATION_EMAIL }}
        from: GitHub Actions 